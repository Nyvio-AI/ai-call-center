# Auto-generated by Lumenary
from pydantic import BaseModel, Field
from typing import List, Optional, Dict, Any, Union, Literal, Annotated, Tuple, Set, Any

from datetime import datetime, date, time, timedelta
from uuid import UUID
import uuid

class TokenExchangeRequest(BaseModel):
    client_id: str
    grant_type: str
    code: Optional[str] = None
    code_verifier: Optional[str] = None

class TokenResponse(BaseModel):
    access_token: str
    token_type: str = "bearer"
    expires_in: int = 3600

class TokenValidationRequest(BaseModel):
    token: str
    
class LogoutResponse(BaseModel):
    success: bool = True

# Import user-defined models that we need for input/response models
from core.agent import Agent
from core.call_record import CallRecord

class BodyAgentServiceCreateAgent(BaseModel):
  name: str
  prompt: str
  voice_settings: Optional[Dict] = None
  personality_settings: Optional[Dict] = None

CreateAgentOutputSchema = Agent
GetAllAgentsOutputSchema = List[Agent]
class BodyAgentServiceGetAgentById(BaseModel):
  agent_id: UUID

GetAgentByIdOutputSchema = Optional[Agent]
class BodyAgentServiceUpdateAgent(BaseModel):
  agent_id: UUID
  name: Optional[str] = None
  prompt: Optional[str] = None
  voice_settings: Optional[Dict] = None
  personality_settings: Optional[Dict] = None

UpdateAgentOutputSchema = Optional[Agent]
class BodyAgentServiceDeleteAgent(BaseModel):
  agent_id: UUID

DeleteAgentOutputSchema = bool
class BodyCallServiceInitiateCall(BaseModel):
  agent_id: UUID
  from_number: str
  to_number: str

InitiateCallOutputSchema = CallRecord
class BodyCallServiceGetCallRecords(BaseModel):
  limit: int

GetCallRecordsOutputSchema = List[CallRecord]
class BodyCallServiceGetCallRecordById(BaseModel):
  call_id: UUID

GetCallRecordByIdOutputSchema = Optional[CallRecord]
class BodyCallServiceUpdateCallStatus(BaseModel):
  call_id: UUID
  status: str
  metadata: Optional[Dict] = None

UpdateCallStatusOutputSchema = Optional[CallRecord]
    